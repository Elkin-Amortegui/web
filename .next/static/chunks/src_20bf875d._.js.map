{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\n\n// Contact Form Schema (Updated to include subject)\nconst contactFormSchema = z.object({\n  name: z.string().min(3, 'Nombre es requerido (mínimo 3 caracteres).'),\n  email: z.string().email('Correo electrónico inválido.'),\n  subject: z.string().min(5, 'Asunto es requerido (mínimo 5 caracteres).'),\n  message: z.string().min(10, 'Mensaje debe tener al menos 10 caracteres.'),\n});\n\nexport type ContactFormState = {\n  message: string;\n  fields?: Record<string, string>;\n  issues?: string[];\n  success: boolean;\n};\n\nexport async function submitContactForm(\n  prevState: ContactFormState,\n  data: FormData\n): Promise<ContactFormState> {\n  const formData = Object.fromEntries(data);\n  const parsed = contactFormSchema.safeParse(formData);\n\n  if (!parsed.success) {\n    const issues = parsed.error.issues.map((issue) => issue.message);\n    return {\n      message: 'Error de validación. Por favor revise los campos.',\n      fields: formData as Record<string, string>, // Send back entered data\n      issues,\n      success: false,\n    };\n  }\n\n  try {\n    // Simulate sending email\n    console.log('Contact Data:', parsed.data);\n    // Example: await sendEmail({ to: 'centrodeidiomas@unillanos.edu.co', subject: `Nuevo Contacto: ${parsed.data.subject}`, body: ... });\n\n    return { message: '¡Mensaje enviado con éxito! Gracias por contactarnos. Nos pondremos en contacto pronto.', success: true, fields: {}, issues: [] };\n  } catch (error)\n {\n    console.error('Contact submission error:', error);\n    return { \n      message: 'Error al enviar el mensaje. Por favor, inténtelo de nuevo más tarde.', \n      success: false,\n      fields: formData as Record<string, string>, // Send back entered data on server error too\n      issues: ['Ocurrió un error en el servidor.']\n    };\n  }\n}\n\n\n// Enrollment Form Schema & Action (No longer used as per new requirements, can be removed or kept for reference)\n/*\nconst enrollmentFormSchema = z.object({\n  fullName: z.string().min(3, 'Nombre completo es requerido.'),\n  age: z.coerce.number().min(5, 'Edad debe ser al menos 5 años.').max(100, 'Edad no puede ser mayor a 100.'),\n  proficiencyLevel: z.string().min(1, 'Nivel de conocimiento es requerido.'),\n  email: z.string().email('Correo electrónico inválido.'),\n  phone: z.string().min(7, 'Teléfono debe tener al menos 7 dígitos.'),\n  course: z.string().min(1, 'Debe seleccionar un curso.'),\n  language: z.string().min(1, 'Debe seleccionar un idioma.'),\n});\n\nexport type EnrollmentFormState = {\n  message: string;\n  fields?: Record<string, string>;\n  issues?: string[];\n  success: boolean;\n};\n\nexport async function submitEnrollmentForm(\n  prevState: EnrollmentFormState,\n  data: FormData\n): Promise<EnrollmentFormState> {\n  const formData = Object.fromEntries(data);\n  const parsed = enrollmentFormSchema.safeParse(formData);\n\n  if (!parsed.success) {\n    const issues = parsed.error.issues.map((issue) => issue.message);\n    return {\n      message: 'Error de validación. Por favor revise los campos.',\n      fields: formData as Record<string, string>,\n      issues,\n      success: false,\n    };\n  }\n\n  try {\n    console.log('Enrollment Data:', parsed.data);\n    return { message: '¡Inscripción enviada con éxito! Nos pondremos en contacto pronto.', success: true };\n  } catch (error) {\n    console.error('Enrollment submission error:', error);\n    return { message: 'Error al enviar el formulario. Por favor, inténtelo de nuevo.', success: false };\n  }\n}\n*/\n"],"names":[],"mappings":";;;;;IAmBsB;CAoCtB,iHAAiH;CACjH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA","debugId":null}},
    {"offset": {"line": 57, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/contacto/ContactForm.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useFormState, useFormStatus } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { submitContactForm, type ContactFormState } from '@/app/actions';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast'; // Corrected path if use-toast is in hooks\nimport { Loader2 } from 'lucide-react';\n\nconst contactFormSchema = z.object({\n  name: z.string().min(3, 'Nombre es requerido (mínimo 3 caracteres).'),\n  email: z.string().email('Correo electrónico inválido.'),\n  subject: z.string().min(5, 'Asunto es requerido (mínimo 5 caracteres).'),\n  message: z.string().min(10, 'Mensaje debe tener al menos 10 caracteres.'),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full\">\n      {pending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n      {pending ? 'Enviando...' : 'Enviar Mensaje'}\n    </Button>\n  );\n}\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const [formState, formAction] = useFormState<ContactFormState, FormData>(submitContactForm, {\n    message: '',\n    success: false,\n  });\n\n  const { register, handleSubmit, formState: { errors }, reset } = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: formState.fields?.name || '',\n      email: formState.fields?.email || '',\n      subject: formState.fields?.subject || '',\n      message: formState.fields?.message || '',\n    }\n  });\n\n  useEffect(() => {\n    if (formState.message) {\n      toast({\n        title: formState.success ? 'Mensaje Enviado' : 'Error en el Formulario',\n        description: formState.message,\n        variant: formState.success ? 'default' : 'destructive',\n      });\n      if (formState.success) {\n        reset({ name: '', email: '', subject: '', message: '' });\n      }\n    }\n  }, [formState, toast, reset]);\n  \n  // Wrapper function to satisfy react-hook-form's onSubmit with formAction\n  const handleFormSubmit = (data: ContactFormData) => {\n    const formData = new FormData();\n    Object.entries(data).forEach(([key, value]) => {\n      formData.append(key, String(value));\n    });\n    formAction(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-6\">\n      <div>\n        <Label htmlFor=\"contact-name\">Nombre Completo</Label>\n        <Input id=\"contact-name\" {...register('name')} placeholder=\"Tu nombre completo\" className=\"mt-1\" />\n        {errors.name && <p className=\"text-sm text-destructive mt-1\">{errors.name.message}</p>}\n      </div>\n\n      <div>\n        <Label htmlFor=\"contact-email\">Correo Electrónico</Label>\n        <Input id=\"contact-email\" type=\"email\" {...register('email')} placeholder=\"tu@correo.com\" className=\"mt-1\" />\n        {errors.email && <p className=\"text-sm text-destructive mt-1\">{errors.email.message}</p>}\n      </div>\n\n      <div>\n        <Label htmlFor=\"contact-subject\">Asunto</Label>\n        <Input id=\"contact-subject\" {...register('subject')} placeholder=\"Asunto de tu mensaje\" className=\"mt-1\" />\n        {errors.subject && <p className=\"text-sm text-destructive mt-1\">{errors.subject.message}</p>}\n      </div>\n\n      <div>\n        <Label htmlFor=\"contact-message\">Mensaje</Label>\n        <Textarea\n          id=\"contact-message\"\n          {...register('message')}\n          placeholder=\"Escribe tu consulta aquí...\"\n          className=\"mt-1 min-h-[120px]\"\n        />\n        {errors.message && <p className=\"text-sm text-destructive mt-1\">{errors.message.message}</p>}\n      </div>\n      \n      <SubmitButton />\n      {formState.issues && formState.issues.length > 0 && !formState.success && (\n        <div className=\"text-sm text-destructive mt-2 space-y-1\">\n          {formState.issues.map((issue, index) => <p key={index}>{issue}</p>)}\n        </div>\n      )}\n    </form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}